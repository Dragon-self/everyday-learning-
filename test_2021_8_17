#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
//int main()
//{
//	int a = 10;
//	int* p = &a;//指针变量
//	return 0;
//}

//int main()
//{
//	/*printf("%d\n", sizeof(char*));
//	printf("%d\n", sizeof(short*));
//	printf("%d\n", sizeof(int*));
//	printf("%d\n", sizeof(double*));*/
//	int a = 0x11223344;
//	//int* pa = &a;
//	//*pa = 0;
//	char* pc = &a;
//	*pc = 0;
//	//printf("%p\n",pa);
//	//printf("%p\n", pc);
//	return 0;
//}
//指针类型决定了指针进行解引用操作的时候，能访问的空间的大小
//int* p; *p能访问4个字节
//char* p; *p能访问1个字节
//dounle* p; *p能访问8个字节

//int main()
//{
//	int a = 0x11223344;
//	int* pa = &a;
//	char* pc = &a;
//	printf("%p\n", pa);
//	printf("%p\n", pa + 1);
//
//	printf("%p\n", pc);
//	printf("%p\n", pc + 1);
//	return 0;
//}
//指针类型决定了指针一步走多远（指针的步长）
//int* p; p+1 -> 4
//char* p; p+1 -> 1
//double* p; p+1 ->8

//int main()
//{
//	int arr[10] = { 0 };
//	int* p = arr;//数组名-首元素地址
//	int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		*(p + i) = 1;
//	}
//	return 0;
//}

//int main()
//{
//	int a;//局部变量不初始化，默认随机值
//	int* p;//1.局部的指针变量，就被初始化默认值，为野指针
//	return 0;
//}

//int main()
//{
//	int arr[10] = { 0 };
//	int* p = arr;
//	int i = 0;
//	for (i = 0; i < 12; i++)
//	{
//		p++;
//	}
//	//2.当指针指向的范围超出数组arr的范围（数组越界）时，p就是野指针
//	return 0;
//}

//int* test()
//{
//	int a = 10;
//	return &a;
//}
//
//int main()
//{
//	int* p = test();
//	*p = 20;
//	return 0;
//}
////3.当指针指向的空间已经被释放（还给操作系统），p也是野指针
