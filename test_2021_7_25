#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

//int Fac1(int n)
//{
//	int i = 0;
//	int z = 1;
//	for (i = 1; i <= n; i++)
//	{
//		z = z * i;
//	}
//	return z;
//}
//
//int Fac2(int n)
//{
//	if (n > 1)
//		return n * Fac2(n - 1);
//	else
//		return 1;
//}
//
//int main()
//{
//	//求n的阶乘
//	int n = 0;
//	int ret = 0;
//	scanf("%d", &n);
//	ret = Fac2(n);
//	printf("%d", ret);
//	return 0;
//}

//1 1 2 3 5 8 13 21
//1 2 3 4 5 6 7  8
//1 0+1 1+1 1+2 
// 
//int count = 0;
//int Fib(int n)
//{
//	if (n == 3)
//		count++;//测试第三个斐波那契数列的计算次数
//	if (n <= 2)
//		return 1;
//	if (n > 2)
//		return Fib(n - 1) + Fib(n - 2);
//}

//int Fib(int n)
//{
//	int i = 0;
//	int j = 1;
//	int k = 1;
//	int l = 1;
//	if (n <= 2)
//		return 1;
//	else
//	{
//		for (i = 3; i <= n; i++)
//		{
//			if (i % 2 == 1)
//			{
//				j = j + k;
//				k = j;
//			}
//			else
//			{
//				j = j + l;
//				l = j;
//			}
//		}
//	}
//	return j;
//}

//int Fib(int n)
//{
//	int i = 0;
//	int j = 0;
//	int k = 1;
//	int l = 1;
//	int tmp1 = 0;
//	int tmp2 = 0;
//	if (n <= 2)
//		return 1;
//	else
//	{
//		for (i = 3; i <= n; i++)
//		{
//			tmp1 = k;
//			tmp2 = l;
//			l = l + k;
//			j = tmp1;
//			k = tmp2;
//		}
//	}
//	return l;
//}

//int Fib(int n)
//{
//	int i = 0;
//	int j = 1;
//	int k = 1;
//	int l = 0;
//	if (n <= 2)
//		return 1;
//	else
//	{
//		for (i = 3; i <= n; i++)
//		{
//			l = j + k;
//			j = k;
//			k = l;
//		}
//	}
//	return l;
//}

//int Fib(int n)
//{
//	int j = 1;
//	int k = 1;
//	int l = 1;
//	while (n > 2)
//	{
//		l = j + k;
//		j = k;
//		k = l;
//		n--;
//	}
//	return l;
//}
//
//int main()
//{
//	int n = 0;
//	int ret = 0;
//	scanf("%d", &n);
//	//TDD - 测试驱动开发
//	ret = Fib(n);
//	printf("ret=%d\n", ret);
//	//printf("count=%d\n", count);
//	return 0;
//}

//int main()
//{
//	int arr1[10] = { 1,2,3 };//不完全初始化，剩下的元素默认初始化为0
//	char arr2[] = "abcd";
//	char arr3[] = { 'a','b' };
//	return 0;
//}

//1.strlen和sizeof没有什么关联
//2.strlen是字符串长度的-只能针对字符串求长度-库函数-使用要引用头文件
//3.sizeof计算变量、数组、类型的大小-单位是字节-操作符

//int main()
//{
//	char arr[] = "abcdef";
//	int i = 0;
//	int len = strlen(arr);
//	for (i = 0; i < len; i++)
//	{
//		printf("%c ", arr[i]);
//	}
//	return 0;
//}

//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("&arr[%d] = %p\n", i, &arr[i]);
//	}
//	return 0;
//}

//int main()
//{
//	int arr1[3][4] = { {1,2,3},{4,5} };//3行4列
//	int arr2[][4] = { {1,2,3},{4,5} };//在二维数组中行可省略，列不可省略
//	int i = 0;
//	for (i = 0; i < 3; i++)
//	{
//		int j = 0;
//		for (j = 0; j < 4; j++)
//		{
//			printf("%d ", arr1[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}

int main()
{
	int arr1[3][4] = { {1,2,3},{4,5} };//3行4列
	int i = 0;
	for (i = 0; i < 3; i++)
	{
		int j = 0;
		for (j = 0; j < 4; j++)
		{
			printf("&arr1[%d][%d] = %p\n",i,j,&arr1[i][j]);
		}
	}
	return 0;
}
