#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

//(*(void(*)())0)()
	//signal是一个函数声明
	//signal函数的参数有2个，第一个是int，第二个是函数指针，该函数指针指向的函数的参数是int，返回类型是void
	//signal函数的返回类型也是一个函数指针，该函数指针指向的函数的参数是int，返回类型是void；
	//
	//void(*signal   (int,   void(*)(int)  )  )(int);
	// 	   //简化
	//typedef void(*pfun_t)(int);
	//pfun_t signal(int, pfun_t);

//int Add(int x, int y)
//{
//	return x + y;
//}
//int Sub(int x, int y)
//{
//	return x - y;
//}
//int Mul(int x, int y)
//{
//	return x * y;
//}
//int Div(int x, int y)
//{
//	return x / y;
//}
//
//
//
//int main()
//{
//	//指针数组
//	int* arr[5];//
//	//需要一个数组，这个数组可以存放4个函数的地址 - 函数指针的数组
//	int (*parr[4])(int, int) = { Add,Sub,Mul,Div };
//	int i = 0;
//	for (i = 0; i < 4; i++)
//	{
//		printf("%d\n",parr[i](2, 3));//5 -1 6 0
//	}
//	return 0;
//}


#include <assert.h>
char* my_strcpy(char* dest, const char* src)
{
	assert(*dest != NULL);
	assert(*src != NULL);
	char* ch = dest;
	while (*dest++ = *src++)
	{
	}
	return dest;
}

int main()
{
	char str1[] = "hello";
	char str2[] = "world";
	my_strcpy(str2, str1);
	printf("%s\n", str2);
	char(*pf)(char*, const char*);
	char(*pff[4])(char*, const char*);
	return 0;
}
