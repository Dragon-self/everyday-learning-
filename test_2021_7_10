#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>


int main()
{
	int a = 10;
	int* p = &a;
	printf("%p\n", &a);
	printf("%p\n", p);
	*p = 20;
	printf("a=%d\n", a);
	return 0;
}
//小疑问：一个整形占用4个字节，取地址取得的是第一个字节的地址吗？
//回答：是的，变量的地址一般指它占用的字节中第一个字节的地址。






//#define MAX(x,y) (x>y?x:y)//宏的定义
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int max = MAX(a, b);
//	printf("%d\n", max);
//	return 0;
//}






//typedef unsigned int u_int；类型重定义
//1、static int a = 1;修饰局部变量，延长生命周期
//2、修饰全局作用域，让静态的全局变量只能在自己所在的源文件内部使用
//3、修饰函数改变了函数的链接属性，外部链接属性-->内部链接属性

//#define _CRT_SECURE_NO_WARNINGS
//
//#include <stdio.h>
//int Add(int x, int y)
//{
//	int z = 0;
//	z = x + y;
//	return z;
//}

//声明
//extern int Add(int, int);
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int sum = Add(a, b);
//	printf("%d\n", sum);
//	/*int a = 0;
//	int b = ~a;
//	printf("%d\n", b);*/
//	return 0;
//}

//00000000000000000000000000000000---补码、原码、反码相同---  0
//11111111111111111111111111111111---补码
//11111111111111111111111111111110---反码
//10000000000000000000000000000001---原码---   -1


//int MAX(int x, int y)
//{
//	if (x > y)
//		return x;
//	else
//		return y;
//}
//
//
//
//int main()
//{
//	int a = 1;
//	int b = 2;
//	int c = 0;
//	scanf("%d%d", &a,&b);
//	c = MAX(a, b);
//	printf("更大的是：%d\n", c);
//	//char ch[11] = "hello bit";
//	//int arr[10] = {0,'\111','\11','\0'};
//	return 0;
//}
