#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int my_strlen(char ch[])
{
	int i = 0;
	while (ch[i] != '\0')
	{
		i++;
	}
	return i;
}

//void reverse_string(char ch[])
//{
//	int left = 0;
//	int right = my_strlen(ch) - 1;
//	while (left < right)
//	{
//		char tmp = ch[left];
//		ch[left] = ch[right];
//		ch[right] = tmp;
//		left++;
//		right--;
//	}
//}

//void reverse_string(char ch[])
//{
//	char tmp = ch[0];
//	int len = my_strlen(ch);
//	ch[0] = ch[len - 1];
//	ch[len - 1] = '\0';
//	if (my_strlen(ch+1)>=2)
//	{
//		reverse_string(ch + 1);
//	}
//	ch[len - 1] = tmp;
//}
//
//int main()
//{
//	char ch[] = "abcdef";
//	reverse_string(ch);
//	printf("%s\n", ch);
//	return 0;
//}

//int DigitSum(int n)
//{
//	int i = 0;
//	if (n / 10 != 0)
//	{
//		return n % 10 + DigitSum(n / 10);
//	}
//	return n;
//}
//
//int main()
//{
//	unsigned int n = 0;
//	scanf("%d", &n);
//	int i = DigitSum(n);
//	printf("%d\n", i);
//	return 0;
//}

double Squre(int n, int k)
{
	if (k > 1)
		return n * Squre(n, k - 1);
	else
	{
		if (k == 1)
			return n;
		else if (k == 0)
			return 1;
		else
			return(1.0 / Squre(n, -k));
	}
}

int main()
{
	unsigned int n = 0;
	unsigned int k = 0;
	scanf("%d%d", &n,&k);
	double i = Squre(n,k);
	printf("%lf\n", i);
	return 0;
}
